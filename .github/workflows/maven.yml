name: Java CI with Maven and ZAP DAST Scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B package --file pom.xml

  semgrep:
    name: semgrep/ci
    runs-on: ubuntu-20.04
    needs: build
    
    env:
      SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
    container:
      image: semgrep/semgrep
    if: (github.actor != 'dependabot[bot]')
    steps:
      - uses: actions/checkout@v3
      - run: semgrep ci

  zap-scan:
    name: ZAP DAST Scan
    runs-on: ubuntu-20.04
    needs: build
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: List root directory contents
        run: ls -la

      - name: List target directory contents
        run: ls -la target

      - name: Build Docker image
        run: docker build -t webgoat-build:latest .

      - name: Run Docker container
        run: docker run -d -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat-build:latest

      - name: Wait
        run: sleep 60  

      - name: Run scan
        run: |
          docker run --network="host" -v $(pwd):/zap/wrk/:rw -t owasp/zap2docker-stable zap-baseline.py \
          -t http://localhost:8080 -g gen.conf -r zap-report.html

      - name: Archive results
        uses: actions/upload-artifact@v2
        with:
          name: zap-scan-results
          path: zap-report.html
