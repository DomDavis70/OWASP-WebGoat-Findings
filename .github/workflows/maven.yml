name: Java CI with Maven and ZAP DAST Scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - uses: actions/upload-artifact@v4
      with:
        name: build-artifact
        path: target/

  semgrep:
    name: semgrep/ci
    runs-on: ubuntu-20.04
    needs: build
    
    env:
      SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
    container:
      image: semgrep/semgrep
    if: (github.actor != 'dependabot[bot]')
    steps:
      - uses: actions/checkout@v3
      - name: scan with Semgrep Code
        run: semgrep ci --code

      - name: scan with Semgrep Supply Chain
        run: semgrep ci --supply-chain

  zap-scan:
    name: ZAP DAST Scan
    runs-on: ubuntu-20.04
    needs: build
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: target/

      - name: Build Docker image
        run: docker build -t webgoat-build:latest .

      - name: Run Docker container
        run: docker run -d -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat-build:latest

      - name: Wait
        run: sleep 30

      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.10.0
        with:
          token: ${{ secrets.PAT }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://127.0.0.1:8080/WebGoat'
          rules_file_name: 'zap/rules.tsv'
          cmd_options: '-a'
          
      - name: Archive results
        uses: actions/upload-artifact@v2
        with:
          name: zap-scan-results
          path: zap-report.html
